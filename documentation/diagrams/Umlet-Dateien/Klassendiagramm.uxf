<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>77</x>
      <y>42</y>
      <w>462</w>
      <h>273</h>
    </coordinates>
    <panel_attributes>Blackjack-Controller
--
staticPath: String = "../static/docbook_blackjack/"
--
setup(): GET-Response
start(playerName: String?, playerId: String?): GET-Response
newGame(playerName: String, playerId: String, SinglePlayer: String): GET-Response
join(gameId: String, playerId: String) GET-Response
redirectLobby(): GET-Response
generateLobby(lobby: Element, xslStylesheet: string, parameters: item*, title: string): GET-Response
drawGame(gameId: integer):	GET-Response
getGameLayout(gameId: integer, playerId: interger): GET-Response
bet(gameId: integer, playerId: string, chipValue: integer): POST-Response
confirmBet(gameId: integer, playerId: string): POST-Response
resetBet(gameId: integer, playerId: string): POST-Response
dealPhase(gameId: integer): GET-Response
handOutOneCardToEach(gameId: integer): GET-Response
hit(gameId: integer, playerId: string): POST-Response
stand(gameId: integer, playerId: string): POST-Response
exit(gameId: integer, playerId: string, playerName: string): POST-Response
dealerTurn(gameId: integer): GET-Response
pay(gameId: integer): GET-Response
restoreAccount(playerName: string, playerId: string): GET-Response
createAccount(playerName: string): 	POST-Response
joinGame(gameId: integer, playerId: string) POST-Response</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>413</x>
      <y>371</y>
      <w>462</w>
      <h>259</h>
    </coordinates>
    <panel_attributes>Blackjack-Main
--
players: XML
lobby: XML
--
newGame(gameId: integer, playerName: String, playerId: String, SinglePlayer: String)
newRound(gameId: integer)
drawCard(gameId: integer, playerId: string)
calculateHandValue(hand: Element): integer
calculateHandValueHelper(hand: Element): integer
reduceNumberOfAces(numberOfAces: integer, handValue: integer): integer
payPlayers(gameId: integer)
payPlayer(gameId: integer, playerId: string)
bet(gameId: integer, playerId: string, chipValue integer)
confirmBet(gameId: integer, playerId: string)
handOutOneCardToEach(gameId: integer)
dealPhase(gameId: integer)
moveTurn(gameId: integer, playerId: string)
moveTurnHelper(gameId: integer, playerId: string)
dealerTurn(gameId: integer)
addPlayer(gameId: integer, playerId: string)
addHighscore(gameId: integer, playerId: string)
leaveGame(gameId: integer, playerId: string)
endGame(gameId: integer)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>469</x>
      <y>308</y>
      <w>28</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>77</x>
      <y>385</y>
      <w>287</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>Blackjack-Helper
--
deck: XML
players: XML
lobby: XML
--
generateDeck(): Deck-Element
getRandomInt(max: integer) integer
getRandomIntFromRange(min: integer, max: integer) integer
createPlayerId(): integer
createGameId(): integer
playerExists(playerName: string, playerId: string): boolean
getPlayerHighscore(playerName: string, playerId: string): integer
getScoreBoard(): Score-Element
getPlayerName(playerId: string): string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>238</x>
      <y>308</y>
      <w>28</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>357</x>
      <y>448</y>
      <w>70</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>616</x>
      <y>133</y>
      <w>259</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>Blackjack-Websocket
--
--
stompconnect()
stompdisconnect()
subscribe(game: string, playerId: string, gameId: string)
getIds(): Map
send(data: string, path: URL)
get(wsId: string, key: string) string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>672</x>
      <y>231</y>
      <w>28</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;200.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>532</x>
      <y>203</y>
      <w>98</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
